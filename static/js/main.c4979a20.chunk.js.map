{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/ContactList/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/ContactFilter/ContactFilter.jsx","components/Section.jsx","helpers.js","App.js","index.js"],"names":["ContactForm","addContact","useState","name","setName","number","setNumber","onSubmit","e","preventDefault","contact","id","uuid","className","htmlFor","type","value","pattern","title","required","onChange","target","ContactListItem","removeContact","onClick","ContactList","contacts","map","ContactFilter","filter","handleFilterName","Section","children","App","setContacts","setFilter","useEffect","storedContacts","key","result","localStorage","getItem","JSON","parse","error","Error","getFromLocalStorage","setItem","stringify","saveToLocalStorage","filtered","toLowerCase","includes","some","item","a","b","localeCompare","undefined","sensitivity","alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4979a20.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nimport \"./ContactForm.css\";\r\n\r\nexport default function ContactForm({ addContact }) {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const reset = () => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  const onChangeName = (e) => setName(e.target.value);\r\n  const onChangeNumber = (e) => setNumber(e.target.value);\r\n\r\n  const submitForm = (e) => {\r\n    e.preventDefault();\r\n    const contact = { id: uuid(), name, number };\r\n    addContact(contact);\r\n    reset();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitForm}>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"name\" className=\"form-label\">\r\n          Name\r\n        </label>\r\n        <input\r\n          className=\"form-control\"\r\n          id=\"name\"\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={onChangeName}\r\n        />\r\n      </div>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"number\" className=\"form-label\">\r\n          Number\r\n        </label>\r\n        <input\r\n          className=\"form-control\"\r\n          id=\"number\"\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={onChangeNumber}\r\n        />\r\n      </div>\r\n      <input type=\"submit\" value=\"Add contact\" className=\"btn btn-primary\" />\r\n    </form>\r\n  );\r\n}\r\n\r\nContactForm.propTypes = {\r\n  addContact: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react'\r\n\r\nfunction ContactListItem({ contact, removeContact }) {\r\n  return (\r\n    <li className=\"list-group-item\">\r\n      <p>{contact.name} : {contact.number}</p>\r\n      <button className=\"btn btn-danger btn-sm\" onClick={() => removeContact(contact.id)}>Delete</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default ContactListItem;","import React from 'react';\r\nimport ContactListItem from './ContactListItem';\r\n\r\nconst ContactList = ({ contacts, removeContact }) => {\r\n  return (\r\n    <ul className=\"list-group list-group-flush\">\r\n      {contacts.map(contact => <ContactListItem key={contact.id } contact={contact} removeContact={ removeContact} />)}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default ContactList;","import React from \"react\";\r\n\r\nconst ContactFilter = ({ filter, handleFilterName }) => {\r\n  return (\r\n    <div className=\"\">\r\n      <label htmlFor=\"filter\" className=\"form-label\">\r\n        Find contacts by name\r\n      </label>\r\n      <input\r\n        className=\"form-control\"\r\n        id=\"filter\"\r\n        type=\"text\"\r\n        name=\"filter-name\"\r\n        value={filter}\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        required\r\n        onChange={handleFilterName}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ContactFilter;\r\n","import React from \"react\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <div>\r\n      <h2 className=\"h2 mt-3\">{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","export function ciEquals(a, b) {\n  return typeof a === \"string\" && typeof b === \"string\"\n    ? a.localeCompare(b, undefined, { sensitivity: \"accent\" }) === 0\n    : a === b;\n}\n\nexport const saveToLocalStorage = (key, value) => {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n  } catch (error) {\n    throw new Error();\n  }\n};\n\nexport const getFromLocalStorage = (key) => {\n  try {\n    const result = localStorage.getItem(key);\n    return result ? JSON.parse(result) : null;\n  } catch (error) {\n    throw new Error();\n  }\n};\n","import { useEffect, useState } from \"react\";\n\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport ContactFilter from \"./components/ContactFilter/ContactFilter\";\nimport Section from \"./components/Section\";\nimport { ciEquals, getFromLocalStorage, saveToLocalStorage } from \"./helpers\";\n\nimport \"./index.css\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    const storedContacts = getFromLocalStorage(\"contacts\");\n    storedContacts && setContacts(storedContacts);\n  }, []);\n\n  useEffect(() => {\n    saveToLocalStorage(\"contacts\", contacts);\n  }, [contacts]);\n\n  const onFilterName = (e) => setFilter(e.target.value);\n\n  const addContact = (contact) => {\n    if (contacts.some((item) => ciEquals(item.name, contact.name))) {\n      alert(`${contact.name} is already in contacts`);\n      return;\n    }\n    setContacts([...contacts, contact]);\n  };\n\n  const removeContact = (id) => {\n    alert(\"Вы собираетесь удалить елемент с ID: \" + id);\n    setContacts(contacts.filter((item) => item.id !== id));\n  };\n\n  const filterContacts = () =>\n    contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n\n  const filtered = filterContacts();\n\n  return (\n    <div className=\"container\">\n      <Section title=\"Phonebook\">\n        <ContactForm addContact={addContact} />\n      </Section>\n      <Section title=\"Contacts\">\n        <ContactFilter filter={filter} handleFilterName={onFilterName} />\n        <ContactList contacts={filtered} removeContact={removeContact} />\n      </Section>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
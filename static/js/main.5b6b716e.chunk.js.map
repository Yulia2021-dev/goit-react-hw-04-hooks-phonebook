{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/ContactList/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/ContactFilter/ContactFilter.jsx","components/Section.jsx","App.js","helpers.js","index.js"],"names":["ContactForm","props","handleNameInput","handleNumberInput","addContact","name","number","onSubmit","className","htmlFor","id","type","value","pattern","title","required","onChange","ContactListItem","contact","removeContact","onClick","ContactList","contacts","map","ContactFilter","filter","handleFilterName","Section","children","App","useState","setContacts","setName","setNumber","setFilter","filtered","toLowerCase","includes","e","target","preventDefault","uuid","some","item","a","b","localeCompare","undefined","sensitivity","alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b6b716e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ContactForm = (props) => {\r\n  const { handleNameInput, handleNumberInput, addContact, name, number } = props;\r\n  return (\r\n    <form onSubmit={addContact}>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"name\" className=\"form-label\">Name</label>\r\n        <input\r\n          className=\"form-control\"\r\n          id=\"name\"\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleNameInput}\r\n          \r\n        />\r\n      </div>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"number\" className=\"form-label\">Number</label>\r\n        <input\r\n          className=\"form-control\"\r\n          id=\"number\"\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleNumberInput}\r\n        />\r\n      </div>    \r\n      <input type=\"submit\" value=\"Add contact\" className=\"btn btn-primary\" />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ContactForm;","import React from 'react'\r\n\r\nfunction ContactListItem({ contact, removeContact }) {\r\n  return (\r\n    <li className=\"list-group-item\">\r\n      <p>{contact.name} : {contact.number}</p>\r\n      <button className=\"btn btn-danger btn-sm\" onClick={() => removeContact(contact.id)}>Delete</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default ContactListItem;","import React from 'react';\r\nimport ContactListItem from './ContactListItem';\r\n\r\nconst ContactList = ({ contacts, removeContact }) => {\r\n  return (\r\n    <ul className=\"list-group list-group-flush\">\r\n      {contacts.map(contact => <ContactListItem key={contact.id } contact={contact} removeContact={ removeContact} />)}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default ContactList;","import React from 'react'\r\n\r\nconst ContactFilter = ({ filter, handleFilterName }) => {\r\n  return (\r\n    <div className=\"mb-3\">\r\n          <label htmlFor=\"filter\" className=\"form-label\">Find contacts by name</label>\r\n          <input\r\n            className=\"form-control\"\r\n          id=\"filter\"\r\n          type=\"text\"\r\n          name=\"filter-name\"\r\n          value={ filter }\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={ handleFilterName }\r\n        />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ContactFilter;\r\n","import React from 'react'\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <div>\r\n      <h2 className=\"h2\">{ title }</h2>\r\n        { children }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Section;\r\n","import { useState } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport ContactFilter from \"./components/ContactFilter/ContactFilter\";\nimport Section from \"./components/Section\";\nimport { ciEquals } from \"./helpers\";\n\nimport \"./index.css\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [contacts, setContacts] = useState([]);\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n\n  const onChangeName = (e) => setName(e.target.value);\n  const onFilterName = (e) => setFilter(e.target.value);\n  const onChangeNumber = (e) => setNumber(e.target.value);\n\n  const addContact = (e) => {\n    e.preventDefault();\n    const contact = { id: uuid(), name, number };\n    if (contacts.some((item) => ciEquals(item.name, contact.name))) {\n      alert(`${contact.name} is already in contacts`);\n      return;\n    }\n    // Reset all fields\n    setName(\"\");\n    setNumber(\"\");\n    setContacts([...contacts, contact]);\n  };\n\n  const removeContact = (id) => {\n    alert(\"Вы собираетесь удалить елемент с ID: \" + id);\n    setContacts(contacts.filter((item) => item.id !== id));\n  };\n\n  const filterContacts = () =>\n    contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n\n  const filtered = filterContacts();\n\n  return (\n    <div className=\"container\">\n      <Section title=\"Phonebook\">\n        <ContactForm\n          name={name}\n          number={number}\n          handleNameInput={onChangeName}\n          handleNumberInput={onChangeNumber}\n          addContact={addContact}\n        />\n      </Section>\n      <Section title=\"Contacts\">\n        <ContactFilter filter={filter} handleFilterName={onFilterName} />\n        <ContactList contacts={filtered} removeContact={removeContact} />\n      </Section>\n    </div>\n  );\n};\n\nexport default App;\n","export function ciEquals(a, b) {\n  return typeof a === \"string\" && typeof b === \"string\"\n    ? a.localeCompare(b, undefined, { sensitivity: \"accent\" }) === 0\n    : a === b;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}